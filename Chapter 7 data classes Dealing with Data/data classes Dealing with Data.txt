MỞ ĐẦU: Tìm hiểu về Any: "Mẹ của tất cả superclass" (Tương tự Object trong java)
	+ khi gọi toán tử == , function "equals" sẽ đc gọi đằng sau

LỢI ÍCH của Any
	+ Đảm bảo mọi class đều kế thừa hành vi chung
	+ Đảm bảo tất cả class đều đa hình do chung lớp cha là Any

MỘT SỐ FUNCTION CỦA Any
	+ equals(): đc gọi khi sử dụng ==
	+ hashCode():
	+ tótring(): mặc định tên lớp và số đằng sau
	
data class: tốt hơn để ghi đè các function của Any, override các function của Any, có thêm function xử lý data
	+ thêm tiền tố data vào tc class để khai báo đó là data class
	+ tự động override lại các hàm của Any
		+ equals: so sánh dựa trên các thuộc tính trong contructor của object đó
		+ toString: trả về giá trị thuộc tính trong contructor
	+ các function riêng
		+ copy()
		+ componentN:N là số thứ tự thuộc tính trong contructor, lấy giá trị thuộc tính
		+ vd, val(title, isVegetarian) = r: tạo 2 biến title, isVegetarian và gán component tương ứng của r cho
		+ toán tử ===: true nếu refer cùng 1 đối tượng ko phân biệt type(ko gọi equals)
		+ == kiểm tra sự tương đương của đối tượng.
		+ === kiểm tra danh tính đối tượng
	
	+ các thuộc tính tron contructor mới được sử dụng trong các function của data class
	+ Mỗi dataclass phải có một hàm tạo chính, phải xác định ít nhất một tham số. Mỗi
tham số phải được bắt đầu bằng val hoặc var

DEFAULT VALUE:
	+ tạo giá trị mặc định cho thuộc tính trong contructor
	+ truyền args theo thứ tự khai báo, có thể ko cần truyền cho thuộc tính có giá trị mặc đinh trong contructor
	+ truyền = tên args contructor: vd val a = A(title = "aa")
	+ có thể tạo contructor phụ phải uỷ quyền cho contructor chính (ko dùng nhiều do truyền theo tên args đc)
	+ tương tự các para trong function cũng có giá trị mặc định

OVERLOADING

TỔNG KẾT:

NGUYÊN TẮC data class
	+ cóntructor có ít 1 args đc đánh dấu là val hoặc var
	+ ko đc open hay abstract
	